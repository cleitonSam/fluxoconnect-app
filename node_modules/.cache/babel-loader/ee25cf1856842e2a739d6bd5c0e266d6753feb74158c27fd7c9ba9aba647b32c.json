{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useAuth.js\nimport { useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nexport const useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authMode, setAuthMode] = useState('login');\n  useEffect(() => {\n    const userData = localStorage.getItem('fluxConnectUser');\n    if (userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Erro ao analisar dados do usuário:', error);\n        localStorage.removeItem('fluxConnectUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login(email);\n      if (response.data && response.data.length > 0) {\n        const users = response.data;\n        const foundUser = users.find(u => u.email === email && u.senha === password);\n        if (foundUser) {\n          localStorage.setItem('fluxConnectUser', JSON.stringify(foundUser));\n          setUser(foundUser);\n          return foundUser;\n        }\n      }\n      return null;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para verificar se e-mail já existe\n  const checkEmailExists = async email => {\n    try {\n      const response = await authAPI.checkEmail(email);\n      return response.data && response.data.length > 0 && response.data.some(user => user.email === email);\n    } catch (error) {\n      console.error('Erro ao verificar e-mail:', error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n\n      // Verificar se o e-mail já existe\n      const emailExists = await checkEmailExists(userData.email);\n      if (emailExists) {\n        throw new Error('E-mail já cadastrado');\n      }\n      const response = await authAPI.register(userData);\n      if (response.status === 200) {\n        localStorage.setItem('fluxConnectUser', JSON.stringify(userData));\n        setUser(userData);\n        return userData;\n      }\n      return null;\n    } catch (error) {\n      console.error('Erro no registro:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('fluxConnectUser');\n    setUser(null);\n  };\n  const switchAuthMode = mode => {\n    setAuthMode(mode);\n  };\n  return {\n    user,\n    loading,\n    authMode,\n    login,\n    register,\n    logout,\n    switchAuthMode\n  };\n};\n_s(useAuth, \"8+UR3eNEWyB2V8IrvkSrvcysXlM=\");","map":{"version":3,"names":["useState","useEffect","authAPI","useAuth","_s","user","setUser","loading","setLoading","authMode","setAuthMode","userData","localStorage","getItem","JSON","parse","error","console","removeItem","login","email","password","response","data","length","users","foundUser","find","u","senha","setItem","stringify","checkEmailExists","checkEmail","some","register","emailExists","Error","status","logout","switchAuthMode","mode"],"sources":["/Users/macbook/Documents/b/fluxoconnect-app/src/hooks/useAuth.js"],"sourcesContent":["// src/hooks/useAuth.js\nimport { useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nexport const useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authMode, setAuthMode] = useState('login');\n\n  useEffect(() => {\n    const userData = localStorage.getItem('fluxConnectUser');\n    if (userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        console.error('Erro ao analisar dados do usuário:', error);\n        localStorage.removeItem('fluxConnectUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login(email);\n      \n      if (response.data && response.data.length > 0) {\n        const users = response.data;\n        const foundUser = users.find(u => u.email === email && u.senha === password);\n        \n        if (foundUser) {\n          localStorage.setItem('fluxConnectUser', JSON.stringify(foundUser));\n          setUser(foundUser);\n          return foundUser;\n        }\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Erro no login:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Função para verificar se e-mail já existe\n  const checkEmailExists = async (email) => {\n    try {\n      const response = await authAPI.checkEmail(email);\n      return response.data && response.data.length > 0 && \n             response.data.some(user => user.email === email);\n    } catch (error) {\n      console.error('Erro ao verificar e-mail:', error);\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      \n      // Verificar se o e-mail já existe\n      const emailExists = await checkEmailExists(userData.email);\n      if (emailExists) {\n        throw new Error('E-mail já cadastrado');\n      }\n      \n      const response = await authAPI.register(userData);\n      \n      if (response.status === 200) {\n        localStorage.setItem('fluxConnectUser', JSON.stringify(userData));\n        setUser(userData);\n        return userData;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Erro no registro:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('fluxConnectUser');\n    setUser(null);\n  };\n\n  const switchAuthMode = (mode) => {\n    setAuthMode(mode);\n  };\n\n  return { user, loading, authMode, login, register, logout, switchAuthMode };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}